{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","api/apiSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","addHero","state","action","addOne","payload","deleteHero","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","createSelector","filters","activeFilter","filter","item","element","heroesFetching","heroesFetched","heroesFetchingError","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","getHeroes","query","providesTags","createHero","mutation","hero","invalidatesTags","id","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","HeroesListItem","elementClassName","description","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","isLoading","isFetching","isError","isSuccess","error","useSelector","filteredHeroes","useMemo","slice","useCallback","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","filtersChanged","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","useDispatch","onSubmit","e","preventDefault","newHero","uuidv4","unwrap","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","dispatch","useEffect","btnClass","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.797217fe.chunk.js","sourcesContent":["\nexport const useHttp = () => {\n    const request = async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\n        try {\n            const response = await fetch(url, { method, body, headers });\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch (e) {\n            throw e;\n        }\n    };\n\n    return {\n        request\n    }\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\n// const initialState = {\r\n//     heroes: [],\r\n//     heroesLoadingStatus: 'idle'\r\n// }\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle'\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',\r\n    async () => {\r\n        const { request } = useHttp();\r\n        return await request(\"http://localhost:3001/heroes\");\r\n    }\r\n);\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        addHero: (state, action) => {\r\n            heroesAdapter.addOne(state, action.payload)\r\n        },\r\n        deleteHero: (state, action) => {\r\n            heroesAdapter.removeOne(state,action.payload)\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => { state.heroesLoadingStatus = 'loading' })\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                heroesAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => {\r\n                state.heroesLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => { })\r\n    }\r\n});\r\n\r\nconst { actions, reducer } = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\nconst { selectAll } = heroesAdapter.getSelectors(state => state.heroes)\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    (state) => state.filters.activeFilter,\r\n    selectAll,\r\n    (filter, heroes) => {\r\n        if (filter === 'all') {\r\n            return heroes;\r\n        } else {\r\n            return heroes.filter(item => item.element === filter);\r\n        }\r\n    }\r\n);\r\n\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    addHero,\r\n    deleteHero\r\n} = actions;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const apiSlice = createApi({\r\n    reducerPath: 'api',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3001' }),\r\n    tagTypes:['Heroes'],\r\n    endpoints: builder => ({\r\n        getHeroes: builder.query({\r\n            query: () => '/heroes',\r\n            providesTags:['Heroes']\r\n        }),\r\n        createHero: builder.mutation({\r\n            query: (hero) => ({\r\n                url:'/heroes',\r\n                method:'POST',\r\n                body: hero\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        }),\r\n        deleteHero: builder.mutation({\r\n            query: id => ({\r\n                url:`/heroes/${id}`,\r\n                method:'DELETE',\r\n            }),\r\n            invalidatesTags:['Heroes']\r\n        })\r\n    })\r\n})\r\n\r\nexport const {useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation} = apiSlice;","\nconst HeroesListItem = ({ name, description, element, onDelete }) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li\n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n                className=\"img-fluid w-25 d-inline\"\n                alt=\"unknown hero\"\n                style={{ 'objectFit': 'cover' }} />\n            <div className=\"card-body\">\n\n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete}\n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { deleteHero, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSlice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n\n    const {\n        data: heroes = [],\n        isFetching,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetHeroesQuery()\n\n\n    // const filteredHeroes = useSelector(filteredHeroesSelector);\n    // const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    // const dispatch = useDispatch();\n    // const { request } = useHttp();\n    const activeFilter = useSelector(state => state.filters.activeFilter);\n    const [deleteHero] = useDeleteHeroMutation();\n\n    const filteredHeroes = useMemo(() => {\n        const filteredHeroes = heroes.slice()\n        if (activeFilter === 'all') {\n            return filteredHeroes;\n        } else {\n            return filteredHeroes.filter(item => item.element === activeFilter);\n        }\n    }, [heroes, activeFilter])\n\n\n    // useEffect(() => {\n    //     dispatch(fetchHeroes());\n    //     // eslint-disable-next-line\n    // }, []);\n\n    const onDelete = useCallback((id) => {\n        deleteHero(id);\n        // request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n        //     .then(data => console.log(data, 'Deleted'))\n        // .then(dispatch(deleteHero(id)))\n        //     .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, []);\n\n    if (isLoading) {\n        return <Spinner />;\n    } else if (isError) {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({ id, ...props }) => {\n            return (\n                <CSSTransition\n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)} />\n                </CSSTransition>\n            )\n        })\n    }\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n});\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    async () => {\r\n        const { request } = useHttp();\r\n        return await request(\"http://localhost:3001/filters\");\r\n    }\r\n);\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersChanged: (state, action) => {\r\n            state.activeFilter = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => { state.filtersLoadingStatus = 'loading' })\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filtersAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {\r\n                state.filtersLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => { })\r\n    }\r\n});\r\n\r\nconst { actions, reducer } = filtersSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const { selectAll } = filtersAdapter.getSelectors(state => state.filters);\r\n\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    filtersChanged\r\n} = actions;","import { configureStore } from '@reduxjs/toolkit';\nimport heroes from '../components/heroesList/heroesSlice';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport { apiSlice } from '../api/apiSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {\n        heroes,\n        filters,\n        [apiSlice.reducerPath]: apiSlice.reducer\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;","import { useHttp } from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { addHero } from '../heroesList/heroesSlice';\nimport store from '../../store';\nimport { selectAll } from '../heroesFilters/filtersSlice';\nimport { useCreateHeroMutation } from '../../api/apiSlice';\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const [createHero, {isLoading}] = useCreateHeroMutation();\n\n    const { filtersLoadingStatus } = useSelector(state => state.filters);\n    const filters = selectAll(store.getState())\n    const dispatch = useDispatch();\n    const { request } = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        // request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n        //     .then(res => console.log(res, 'Отправка успешна'))\n        //     .then(dispatch(addHero(newHero)))\n        //     .catch(err => console.log(err));\n        createHero(newHero).unwrap();\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n\n        if (filters && filters.length > 0) {\n            return filters.map(({ name, label }) => {\n                // eslint-disable-next-line\n                if (name === 'all') return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input\n                    required\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\"\n                    className=\"form-control\"\n                    id=\"text\"\n                    placeholder=\"Что я умею?\"\n                    style={{ \"height\": '130px' }}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select\n                    required\n                    className=\"form-select\"\n                    id=\"element\"\n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { useHttp } from '../../hooks/http.hook';\nimport store from '../../store'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { filtersChanged, fetchFilters, selectAll} from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const { filtersLoadingStatus, activeFilter } = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n    const dispatch = useDispatch();\n    const { request } = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilters(request));\n\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner />;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({ name, className, label }) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n\n            return <button\n                key={name}\n                id={name}\n                className={btnClass}\n                onClick={() => dispatch(filtersChanged(name))}\n            >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}